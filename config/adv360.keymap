
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
           &kp EQUAL     &kp N1     &kp N2    &kp N3     &kp N4    &kp N5                          &tog 2       &mo 4           &kp N6     &kp N7     &kp N8            &kp N9      &kp N0               &kp MINUS
    &mt LS(LGUI) TAB      &kp Q      &kp W     &kp E      &kp R     &kp T                          &tog 1    &kp RALT            &kp Y      &kp U      &kp I             &kp O       &kp P  &mt LS(LGUI) BACKSLASH
 &mt LEFT_ALT ESCAPE      &kp A      &kp S     &kp D      &kp F     &kp G            &kp LC(LG(LS(LALT)))  &kp LSHIFT        &kp LCTRL                                &kp RGUI  &kp RSHIFT        &kp LC(LS(LALT))     &kp H   &kp J      &kp K    &kp L  &kp SEMICOLON                &kp SQT
        &kp LS(LGUI)      &kp Z      &kp X     &kp C      &kp V     &kp B                           &none       &none         &kp HOME      &none      &none  &mt RALT PAGE_UP       &none                   &none     &kp N   &kp M  &kp COMMA  &kp DOT       &kp FSLH  &mt LS(LALT) QUESTION
               &mo 2  &kp GRAVE  &kp ENTER  &kp LEFT  &kp RIGHT  &kp BSPC                 &mt LCMD DELETE     &kp END  &lt 3 PAGE_DOWN  &kp ENTER  &kp SPACE            &kp UP    &kp DOWN                &kp LBKT  &kp RBKT   &mo 3
            >;
        };

        layer_WINDOWS {
            bindings = <
   &trans  &trans      &trans  &trans  &trans  &trans            &trans      &mo 4    &trans  &trans  &trans  &trans         &trans  &trans
   &trans  &trans      &trans   &kp F   &kp P   &kp G            &trans     &trans     &kp J   &kp L   &kp U   &kp Y  &kp SEMICOLON  &trans
 &kp LALT  &trans       &kp R   &kp S   &kp T   &kp D            &trans  &kp LCTRL  &kp LALT                  &trans         &trans  &trans  &trans   &kp N   &kp E   &kp I   &kp O  &trans
   &trans  &trans      &trans  &trans  &trans  &trans            &trans     &trans    &trans  &trans  &trans  &trans         &trans  &trans   &kp K  &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &kp ESCAPE  &trans  &trans  &trans            &trans     &trans    &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans
            >;
        };

        layer_keypad {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans   &mo 4  &trans    &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY      &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans  &kp NUMBER_7  &kp NUMBER_8   &kp NUMBER_9     &kp KP_MINUS      &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                                     &trans           &trans       &none  &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp KP_PLUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans         &none         &none         &trans            &none       &none  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_ENTER  &trans
  &mo 3  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans        &trans     &kp KP_N0         &trans           &trans  &kp KP_DOT  &trans         &mo 3
            >;
        };

        layer_fn {
            bindings = <
 &kp F1          &kp F2           &kp F3                &kp F4                 &kp F5           &kp F6            &trans      &mo 4  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &kp LEFT_BRACE    &kp AMPERSAND          &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE             &none      &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &kp LEFT_BRACE       &kp DOLLAR           &kp PERCENT              &kp CARET         &kp PLUS             &none  &kp MINUS  &trans                   &trans   &trans    &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans       &kp TILDE  &kp EXCLAMATION           &kp AT_SIGN               &kp HASH         &kp PIPE             &none      &none  &trans   &none   &none   &trans    &none    &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans          &trans           &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS           &trans            &trans     &trans  &trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

    };
};
